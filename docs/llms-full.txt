---
layout: null
permalink: /llms-full.txt
---
# {{ site.title }} - Comprehensive Documentation Guide

> {{ site.description }}

## About This Repository

This is the comprehensive AI-friendly guide to {% if site.github.project_title %}{{ site.github.project_title }}{% else %}{{ site.title }}{% endif %}. This extended file contains detailed information about the documentation structure, content organization, and key concepts to help AI assistants provide more accurate and contextual responses about this project.

## Table of Contents

1. [Project Overview](#project-overview)
2. [Service Architecture and Concepts](#service-architecture-and-concepts)
3. [Documentation by Category](#documentation-by-category)
4. [Key Concepts and Terminology](#key-concepts-and-terminology)
5. [API Reference Summary](#api-reference-summary)
6. [Recommended Learning Path](#recommended-learning-path)
7. [Additional Resources](#additional-resources)

---

## Project Overview

{% if site.github %}
- **Repository**: {% if site.github.repository_nwo %}[{{ site.github.repository_nwo }}]({{ site.github.repository_url }}){% else %}[{{ site.github.repository_name }}]({{ site.github.repository_url }}){% endif %}
- **Owner**: {{ site.github.owner_name }}
- **Last Updated**: {{ site.time | date: "%Y-%m-%d" }}
{% endif %}

---

## Service Architecture and Concepts

The To-Do service follows RESTful principles with the following key components:

- **Resources**: Primary resources are `user` and `task`
- **Authentication**: Uses Bearer token authentication
- **Data Format**: All requests and responses use JSON

### Resource Relationships

User (1) ----< Tasks (many)

A single user can own multiple tasks. All task operations require user authentication.

### Common Use Cases

1. **Personal Task Management**: Individual users tracking their to-do items
2. **Team Coordination**: Multiple users sharing task lists
3. **Task Prioritization**: Organizing tasks by importance and due date

---

## Documentation by Category

### API Reference

{% for page in site.pages %}
{% if page.categories contains 'api-reference' %}
- [{{ page.title }}]({{ site.url }}{{ site.baseurl }}{{ page.url }}){% if page.description %}: {{ page.description }}{% endif %}
{% endif %}
{% endfor %}

### Tutorials

{% for page in site.pages %}
{% if page.categories contains 'tutorial' %}
- [{{ page.title }}]({{ site.url }}{{ site.baseurl }}{{ page.url }}){% if page.description %}: {{ page.description }}{% endif %}
{% endif %}
{% endfor %}

### Introduction Pages

{% for page in site.pages %}
{% if page.tags contains 'introduction' %}
- [{{ page.title }}]({{ site.url }}{{ site.baseurl }}{{ page.url }}){% if page.description %}: {{ page.description }}{% endif %}
{% endif %}
{% endfor %}

---

## Key Concepts and Terminology

{% assign all_tags = '' | split: '' %}
{% for page in site.pages %}
  {% if page.tags %}
    {% assign page_tags = page.tags %}
    {% for tag in page_tags %}
      {% assign all_tags = all_tags | push: tag %}
    {% endfor %}
  {% endif %}
{% endfor %}

{% assign unique_tags = all_tags | uniq | sort %}
{% if unique_tags.size > 0 %}
Important topics in this documentation:

{% for tag in unique_tags %}
- **{{ tag }}**: {% assign tag_pages = site.pages | where_exp: "item", "item.tags contains tag" | map: "title" %}{{ tag_pages | join: ", " }}
{% endfor %}
{% endif %}

---

## API Reference Summary

The To-Do Service API provides the following key endpoints:

{% assign api_endpoints = '' | split: '' %}
{% for page in site.pages %}
  {% if page.api_endpoints %}
    {% for endpoint in page.api_endpoints %}
      {% assign api_endpoints = api_endpoints | push: endpoint %}
    {% endfor %}
  {% endif %}
{% endfor %}

{% assign unique_endpoints = api_endpoints | uniq | sort %}
{% for endpoint in unique_endpoints %}
- `{{ endpoint }}`{% assign endpoint_page = site.pages | where_exp: "item", "item.api_endpoints contains endpoint" | first %} - See [{{ endpoint_page.title }}]({{ site.url }}{{ site.baseurl }}{{ endpoint_page.url }})
{% endfor %}

---

## Detailed Page Information

{% for page in site.pages %}
{% if page.title and page.url != "/llms.txt" and page.url != "/llms-full.txt" and page.url != "/sitemap.xml" %}
### [{{ page.title }}]({{ site.url }}{{ site.baseurl }}{{ page.url }})

{% if page.description %}{{ page.description }}{% endif %}

{% if page.last_updated %}**Last updated**: {{ page.last_updated }}{% endif %}
{% if page.importance %}**Importance**: {{ page.importance }}/10{% endif %}

{% if page.prerequisites %}
**Prerequisites**: 
{% for prereq in page.prerequisites %}
- {{ prereq }}
{% endfor %}
{% endif %}

{% if page.related_pages %}
**Related Pages**: 
{% for related in page.related_pages %}
- {{ related }}
{% endfor %}
{% endif %}

{% endif %}
{% endfor %}

---

## Recommended Learning Path

1. **Start with the overview**: [To-Do service API overview]({{ site.url }}{{ site.baseurl }}/) - Understand the service capabilities and purpose
2. **Setup your environment**: {% assign setup_page = site.pages | where_exp: "item", "item.url contains 'before-you-start'" | first %}[{{ setup_page.title }}]({{ site.url }}{{ site.baseurl }}{{ setup_page.url }}) - Prepare your local environment for testing
3. **Create your first user**: {% assign user_page = site.pages | where_exp: "item", "item.url contains 'enroll-a-new-user'" | first %}[{{ user_page.title }}]({{ site.url }}{{ site.baseurl }}{{ user_page.url }}) - Learn how to register with the service
4. **Manage tasks**: {% assign task_page = site.pages | where_exp: "item", "item.url contains 'add-a-new-task'" | first %}[{{ task_page.title }}]({{ site.url }}{{ site.baseurl }}{{ task_page.url }}) - Create and organize your tasks
5. **Explore API details**: Review the full API documentation for advanced usage

---

## Additional Resources

{% if site.github.issues_url %}
- [Issues and Bug Reports]({{ site.github.issues_url }})
{% endif %}
{% if site.github.wiki_url %}
- [Project Wiki]({{ site.github.wiki_url }})
{% endif %}

Last generated: {{ site.time | date: "%Y-%m-%d %H:%M:%S" }}